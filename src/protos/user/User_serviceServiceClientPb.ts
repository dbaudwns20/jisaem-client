/**
 * @fileoverview gRPC-Web generated client stub for jisaem.user
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: user/user_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as user_user_communication_pb from '../user/user_communication_pb';


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorParentCreate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/ParentCreate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestParentCreate,
    user_user_communication_pb.ResponseParentCreate,
    (request: user_user_communication_pb.RequestParentCreate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseParentCreate.deserializeBinary
  );

  parentCreate(
    request: user_user_communication_pb.RequestParentCreate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseParentCreate>;

  parentCreate(
    request: user_user_communication_pb.RequestParentCreate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentCreate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseParentCreate>;

  parentCreate(
    request: user_user_communication_pb.RequestParentCreate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentCreate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/ParentCreate',
        request,
        metadata || {},
        this.methodDescriptorParentCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/ParentCreate',
    request,
    metadata || {},
    this.methodDescriptorParentCreate);
  }

  methodDescriptorStudentCreate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/StudentCreate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestStudentCreate,
    user_user_communication_pb.ResponseStudentCreate,
    (request: user_user_communication_pb.RequestStudentCreate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseStudentCreate.deserializeBinary
  );

  studentCreate(
    request: user_user_communication_pb.RequestStudentCreate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseStudentCreate>;

  studentCreate(
    request: user_user_communication_pb.RequestStudentCreate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseStudentCreate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseStudentCreate>;

  studentCreate(
    request: user_user_communication_pb.RequestStudentCreate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseStudentCreate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/StudentCreate',
        request,
        metadata || {},
        this.methodDescriptorStudentCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/StudentCreate',
    request,
    metadata || {},
    this.methodDescriptorStudentCreate);
  }

  methodDescriptorTeacherCreate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/TeacherCreate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestTeacherCreate,
    user_user_communication_pb.ResponseTeacherCreate,
    (request: user_user_communication_pb.RequestTeacherCreate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseTeacherCreate.deserializeBinary
  );

  teacherCreate(
    request: user_user_communication_pb.RequestTeacherCreate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseTeacherCreate>;

  teacherCreate(
    request: user_user_communication_pb.RequestTeacherCreate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseTeacherCreate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseTeacherCreate>;

  teacherCreate(
    request: user_user_communication_pb.RequestTeacherCreate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseTeacherCreate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/TeacherCreate',
        request,
        metadata || {},
        this.methodDescriptorTeacherCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/TeacherCreate',
    request,
    metadata || {},
    this.methodDescriptorTeacherCreate);
  }

  methodDescriptorManagerCreate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/ManagerCreate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestManagerCreate,
    user_user_communication_pb.ResponseManagerCreate,
    (request: user_user_communication_pb.RequestManagerCreate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseManagerCreate.deserializeBinary
  );

  managerCreate(
    request: user_user_communication_pb.RequestManagerCreate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseManagerCreate>;

  managerCreate(
    request: user_user_communication_pb.RequestManagerCreate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseManagerCreate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseManagerCreate>;

  managerCreate(
    request: user_user_communication_pb.RequestManagerCreate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseManagerCreate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/ManagerCreate',
        request,
        metadata || {},
        this.methodDescriptorManagerCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/ManagerCreate',
    request,
    metadata || {},
    this.methodDescriptorManagerCreate);
  }

  methodDescriptorUserListGet = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserListGet',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserListGet,
    user_user_communication_pb.ResponseUserListGet,
    (request: user_user_communication_pb.RequestUserListGet) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserListGet.deserializeBinary
  );

  userListGet(
    request: user_user_communication_pb.RequestUserListGet,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserListGet>;

  userListGet(
    request: user_user_communication_pb.RequestUserListGet,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserListGet) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserListGet>;

  userListGet(
    request: user_user_communication_pb.RequestUserListGet,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserListGet) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserListGet',
        request,
        metadata || {},
        this.methodDescriptorUserListGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserListGet',
    request,
    metadata || {},
    this.methodDescriptorUserListGet);
  }

  methodDescriptorUserGet = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserGet',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserGet,
    user_user_communication_pb.ResponseUserGet,
    (request: user_user_communication_pb.RequestUserGet) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserGet.deserializeBinary
  );

  userGet(
    request: user_user_communication_pb.RequestUserGet,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserGet>;

  userGet(
    request: user_user_communication_pb.RequestUserGet,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserGet) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserGet>;

  userGet(
    request: user_user_communication_pb.RequestUserGet,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserGet) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserGet',
        request,
        metadata || {},
        this.methodDescriptorUserGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserGet',
    request,
    metadata || {},
    this.methodDescriptorUserGet);
  }

  methodDescriptorUserUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserUpdate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserUpdate,
    user_user_communication_pb.ResponseUserUpdate,
    (request: user_user_communication_pb.RequestUserUpdate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserUpdate.deserializeBinary
  );

  userUpdate(
    request: user_user_communication_pb.RequestUserUpdate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserUpdate>;

  userUpdate(
    request: user_user_communication_pb.RequestUserUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserUpdate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserUpdate>;

  userUpdate(
    request: user_user_communication_pb.RequestUserUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserUpdate',
        request,
        metadata || {},
        this.methodDescriptorUserUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserUpdate',
    request,
    metadata || {},
    this.methodDescriptorUserUpdate);
  }

  methodDescriptorParentUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/ParentUpdate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestParentUpdate,
    user_user_communication_pb.ResponseParentUpdate,
    (request: user_user_communication_pb.RequestParentUpdate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseParentUpdate.deserializeBinary
  );

  parentUpdate(
    request: user_user_communication_pb.RequestParentUpdate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseParentUpdate>;

  parentUpdate(
    request: user_user_communication_pb.RequestParentUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentUpdate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseParentUpdate>;

  parentUpdate(
    request: user_user_communication_pb.RequestParentUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/ParentUpdate',
        request,
        metadata || {},
        this.methodDescriptorParentUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/ParentUpdate',
    request,
    metadata || {},
    this.methodDescriptorParentUpdate);
  }

  methodDescriptorUserDelete = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserDelete',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserDelete,
    user_user_communication_pb.ResponseUserDelete,
    (request: user_user_communication_pb.RequestUserDelete) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserDelete.deserializeBinary
  );

  userDelete(
    request: user_user_communication_pb.RequestUserDelete,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserDelete>;

  userDelete(
    request: user_user_communication_pb.RequestUserDelete,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserDelete) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserDelete>;

  userDelete(
    request: user_user_communication_pb.RequestUserDelete,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserDelete) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserDelete',
        request,
        metadata || {},
        this.methodDescriptorUserDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserDelete',
    request,
    metadata || {},
    this.methodDescriptorUserDelete);
  }

  methodDescriptorParentDelete = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/ParentDelete',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestParentDelete,
    user_user_communication_pb.ResponseParentDelete,
    (request: user_user_communication_pb.RequestParentDelete) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseParentDelete.deserializeBinary
  );

  parentDelete(
    request: user_user_communication_pb.RequestParentDelete,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseParentDelete>;

  parentDelete(
    request: user_user_communication_pb.RequestParentDelete,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentDelete) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseParentDelete>;

  parentDelete(
    request: user_user_communication_pb.RequestParentDelete,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentDelete) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/ParentDelete',
        request,
        metadata || {},
        this.methodDescriptorParentDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/ParentDelete',
    request,
    metadata || {},
    this.methodDescriptorParentDelete);
  }

  methodDescriptorUserLabelUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserLabelUpdate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserLabelUpdate,
    user_user_communication_pb.ResponseUserLabelUpdate,
    (request: user_user_communication_pb.RequestUserLabelUpdate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserLabelUpdate.deserializeBinary
  );

  userLabelUpdate(
    request: user_user_communication_pb.RequestUserLabelUpdate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserLabelUpdate>;

  userLabelUpdate(
    request: user_user_communication_pb.RequestUserLabelUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserLabelUpdate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserLabelUpdate>;

  userLabelUpdate(
    request: user_user_communication_pb.RequestUserLabelUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserLabelUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserLabelUpdate',
        request,
        metadata || {},
        this.methodDescriptorUserLabelUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserLabelUpdate',
    request,
    metadata || {},
    this.methodDescriptorUserLabelUpdate);
  }

  methodDescriptorUserPasswordUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/UserPasswordUpdate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestUserPasswordUpdate,
    user_user_communication_pb.ResponseUserPasswordUpdate,
    (request: user_user_communication_pb.RequestUserPasswordUpdate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseUserPasswordUpdate.deserializeBinary
  );

  userPasswordUpdate(
    request: user_user_communication_pb.RequestUserPasswordUpdate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseUserPasswordUpdate>;

  userPasswordUpdate(
    request: user_user_communication_pb.RequestUserPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserPasswordUpdate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseUserPasswordUpdate>;

  userPasswordUpdate(
    request: user_user_communication_pb.RequestUserPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseUserPasswordUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/UserPasswordUpdate',
        request,
        metadata || {},
        this.methodDescriptorUserPasswordUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/UserPasswordUpdate',
    request,
    metadata || {},
    this.methodDescriptorUserPasswordUpdate);
  }

  methodDescriptorParentPasswordUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.user.UserService/ParentPasswordUpdate',
    grpcWeb.MethodType.UNARY,
    user_user_communication_pb.RequestParentPasswordUpdate,
    user_user_communication_pb.ResponseParentPasswordUpdate,
    (request: user_user_communication_pb.RequestParentPasswordUpdate) => {
      return request.serializeBinary();
    },
    user_user_communication_pb.ResponseParentPasswordUpdate.deserializeBinary
  );

  parentPasswordUpdate(
    request: user_user_communication_pb.RequestParentPasswordUpdate,
    metadata: grpcWeb.Metadata | null): Promise<user_user_communication_pb.ResponseParentPasswordUpdate>;

  parentPasswordUpdate(
    request: user_user_communication_pb.RequestParentPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentPasswordUpdate) => void): grpcWeb.ClientReadableStream<user_user_communication_pb.ResponseParentPasswordUpdate>;

  parentPasswordUpdate(
    request: user_user_communication_pb.RequestParentPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_user_communication_pb.ResponseParentPasswordUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.user.UserService/ParentPasswordUpdate',
        request,
        metadata || {},
        this.methodDescriptorParentPasswordUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.user.UserService/ParentPasswordUpdate',
    request,
    metadata || {},
    this.methodDescriptorParentPasswordUpdate);
  }

}

