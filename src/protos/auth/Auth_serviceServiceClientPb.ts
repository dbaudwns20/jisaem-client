/**
 * @fileoverview gRPC-Web generated client stub for jisaem.auth
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: auth/auth_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as auth_auth_communication_pb from '../auth/auth_communication_pb';


export class AuthServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSignIn = new grpcWeb.MethodDescriptor(
    '/jisaem.auth.AuthService/SignIn',
    grpcWeb.MethodType.UNARY,
    auth_auth_communication_pb.RequestSignIn,
    auth_auth_communication_pb.ResponseSignIn,
    (request: auth_auth_communication_pb.RequestSignIn) => {
      return request.serializeBinary();
    },
    auth_auth_communication_pb.ResponseSignIn.deserializeBinary
  );

  signIn(
    request: auth_auth_communication_pb.RequestSignIn,
    metadata: grpcWeb.Metadata | null): Promise<auth_auth_communication_pb.ResponseSignIn>;

  signIn(
    request: auth_auth_communication_pb.RequestSignIn,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseSignIn) => void): grpcWeb.ClientReadableStream<auth_auth_communication_pb.ResponseSignIn>;

  signIn(
    request: auth_auth_communication_pb.RequestSignIn,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseSignIn) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.auth.AuthService/SignIn',
        request,
        metadata || {},
        this.methodDescriptorSignIn,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.auth.AuthService/SignIn',
    request,
    metadata || {},
    this.methodDescriptorSignIn);
  }

  methodDescriptorSignOut = new grpcWeb.MethodDescriptor(
    '/jisaem.auth.AuthService/SignOut',
    grpcWeb.MethodType.UNARY,
    auth_auth_communication_pb.RequestSignOut,
    auth_auth_communication_pb.ResponseSignOut,
    (request: auth_auth_communication_pb.RequestSignOut) => {
      return request.serializeBinary();
    },
    auth_auth_communication_pb.ResponseSignOut.deserializeBinary
  );

  signOut(
    request: auth_auth_communication_pb.RequestSignOut,
    metadata: grpcWeb.Metadata | null): Promise<auth_auth_communication_pb.ResponseSignOut>;

  signOut(
    request: auth_auth_communication_pb.RequestSignOut,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseSignOut) => void): grpcWeb.ClientReadableStream<auth_auth_communication_pb.ResponseSignOut>;

  signOut(
    request: auth_auth_communication_pb.RequestSignOut,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseSignOut) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.auth.AuthService/SignOut',
        request,
        metadata || {},
        this.methodDescriptorSignOut,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.auth.AuthService/SignOut',
    request,
    metadata || {},
    this.methodDescriptorSignOut);
  }

  methodDescriptorProfileGet = new grpcWeb.MethodDescriptor(
    '/jisaem.auth.AuthService/ProfileGet',
    grpcWeb.MethodType.UNARY,
    auth_auth_communication_pb.RequestProfileGet,
    auth_auth_communication_pb.ResponseProfileGet,
    (request: auth_auth_communication_pb.RequestProfileGet) => {
      return request.serializeBinary();
    },
    auth_auth_communication_pb.ResponseProfileGet.deserializeBinary
  );

  profileGet(
    request: auth_auth_communication_pb.RequestProfileGet,
    metadata: grpcWeb.Metadata | null): Promise<auth_auth_communication_pb.ResponseProfileGet>;

  profileGet(
    request: auth_auth_communication_pb.RequestProfileGet,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseProfileGet) => void): grpcWeb.ClientReadableStream<auth_auth_communication_pb.ResponseProfileGet>;

  profileGet(
    request: auth_auth_communication_pb.RequestProfileGet,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseProfileGet) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.auth.AuthService/ProfileGet',
        request,
        metadata || {},
        this.methodDescriptorProfileGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.auth.AuthService/ProfileGet',
    request,
    metadata || {},
    this.methodDescriptorProfileGet);
  }

  methodDescriptorProfileUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.auth.AuthService/ProfileUpdate',
    grpcWeb.MethodType.UNARY,
    auth_auth_communication_pb.RequestProfileUpdate,
    auth_auth_communication_pb.ResponseProfileUpdate,
    (request: auth_auth_communication_pb.RequestProfileUpdate) => {
      return request.serializeBinary();
    },
    auth_auth_communication_pb.ResponseProfileUpdate.deserializeBinary
  );

  profileUpdate(
    request: auth_auth_communication_pb.RequestProfileUpdate,
    metadata: grpcWeb.Metadata | null): Promise<auth_auth_communication_pb.ResponseProfileUpdate>;

  profileUpdate(
    request: auth_auth_communication_pb.RequestProfileUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseProfileUpdate) => void): grpcWeb.ClientReadableStream<auth_auth_communication_pb.ResponseProfileUpdate>;

  profileUpdate(
    request: auth_auth_communication_pb.RequestProfileUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponseProfileUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.auth.AuthService/ProfileUpdate',
        request,
        metadata || {},
        this.methodDescriptorProfileUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.auth.AuthService/ProfileUpdate',
    request,
    metadata || {},
    this.methodDescriptorProfileUpdate);
  }

  methodDescriptorPasswordUpdate = new grpcWeb.MethodDescriptor(
    '/jisaem.auth.AuthService/PasswordUpdate',
    grpcWeb.MethodType.UNARY,
    auth_auth_communication_pb.RequestPasswordUpdate,
    auth_auth_communication_pb.ResponsePasswordUpdate,
    (request: auth_auth_communication_pb.RequestPasswordUpdate) => {
      return request.serializeBinary();
    },
    auth_auth_communication_pb.ResponsePasswordUpdate.deserializeBinary
  );

  passwordUpdate(
    request: auth_auth_communication_pb.RequestPasswordUpdate,
    metadata: grpcWeb.Metadata | null): Promise<auth_auth_communication_pb.ResponsePasswordUpdate>;

  passwordUpdate(
    request: auth_auth_communication_pb.RequestPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponsePasswordUpdate) => void): grpcWeb.ClientReadableStream<auth_auth_communication_pb.ResponsePasswordUpdate>;

  passwordUpdate(
    request: auth_auth_communication_pb.RequestPasswordUpdate,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_auth_communication_pb.ResponsePasswordUpdate) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/jisaem.auth.AuthService/PasswordUpdate',
        request,
        metadata || {},
        this.methodDescriptorPasswordUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/jisaem.auth.AuthService/PasswordUpdate',
    request,
    metadata || {},
    this.methodDescriptorPasswordUpdate);
  }

}

