// source: test/test_message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var label_label_message_pb = require('../label/label_message_pb.js');
goog.object.extend(proto, label_label_message_pb);
var class_class_message_pb = require('../class/class_message_pb.js');
goog.object.extend(proto, class_class_message_pb);
goog.exportSymbol('proto.jisaem.test.ExposeRankType', null, global);
goog.exportSymbol('proto.jisaem.test.OverallTestScore', null, global);
goog.exportSymbol('proto.jisaem.test.Test', null, global);
goog.exportSymbol('proto.jisaem.test.TestExpectedGrade', null, global);
goog.exportSymbol('proto.jisaem.test.TestScore', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jisaem.test.Test = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jisaem.test.Test.repeatedFields_, null);
};
goog.inherits(proto.jisaem.test.Test, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jisaem.test.Test.displayName = 'proto.jisaem.test.Test';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jisaem.test.TestScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jisaem.test.TestScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jisaem.test.TestScore.displayName = 'proto.jisaem.test.TestScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jisaem.test.OverallTestScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jisaem.test.OverallTestScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jisaem.test.OverallTestScore.displayName = 'proto.jisaem.test.OverallTestScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jisaem.test.TestExpectedGrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jisaem.test.TestExpectedGrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jisaem.test.TestExpectedGrade.displayName = 'proto.jisaem.test.TestExpectedGrade';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jisaem.test.Test.repeatedFields_ = [18,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jisaem.test.Test.prototype.toObject = function(opt_includeInstance) {
  return proto.jisaem.test.Test.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jisaem.test.Test} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.Test.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    classUid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    round: jspb.Message.getFieldWithDefault(msg, 7, 0),
    average: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    stDev: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    highScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    lowScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    testLabel: (f = msg.getTestLabel()) && label_label_message_pb.Label.toObject(includeInstance, f),
    exposeRankType: jspb.Message.getFieldWithDefault(msg, 13, 0),
    startAt: (f = msg.getStartAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endAt: (f = msg.getEndAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    closedAt: (f = msg.getClosedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publicExposedAt: (f = msg.getPublicExposedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    scoresList: jspb.Message.toObjectList(msg.getScoresList(),
    proto.jisaem.test.TestScore.toObject, includeInstance),
    expectedGradesList: jspb.Message.toObjectList(msg.getExpectedGradesList(),
    proto.jisaem.test.TestExpectedGrade.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jisaem.test.Test}
 */
proto.jisaem.test.Test.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jisaem.test.Test;
  return proto.jisaem.test.Test.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jisaem.test.Test} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jisaem.test.Test}
 */
proto.jisaem.test.Test.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassUid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRound(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStDev(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighScore(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowScore(value);
      break;
    case 12:
      var value = new label_label_message_pb.Label;
      reader.readMessage(value,label_label_message_pb.Label.deserializeBinaryFromReader);
      msg.setTestLabel(value);
      break;
    case 13:
      var value = /** @type {!proto.jisaem.test.ExposeRankType} */ (reader.readEnum());
      msg.setExposeRankType(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartAt(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndAt(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClosedAt(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublicExposedAt(value);
      break;
    case 18:
      var value = new proto.jisaem.test.TestScore;
      reader.readMessage(value,proto.jisaem.test.TestScore.deserializeBinaryFromReader);
      msg.addScores(value);
      break;
    case 19:
      var value = new proto.jisaem.test.TestExpectedGrade;
      reader.readMessage(value,proto.jisaem.test.TestExpectedGrade.deserializeBinaryFromReader);
      msg.addExpectedGrades(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jisaem.test.Test.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jisaem.test.Test.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jisaem.test.Test} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.Test.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClassUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getAverage();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getStDev();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getHighScore();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getLowScore();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getTestLabel();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      label_label_message_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getExposeRankType();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getStartAt();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndAt();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosedAt();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublicExposedAt();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.jisaem.test.TestScore.serializeBinaryToWriter
    );
  }
  f = message.getExpectedGradesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.jisaem.test.TestExpectedGrade.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.jisaem.test.Test.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string class_uid = 4;
 * @return {string}
 */
proto.jisaem.test.Test.prototype.getClassUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setClassUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.jisaem.test.Test.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.jisaem.test.Test.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 round = 7;
 * @return {number}
 */
proto.jisaem.test.Test.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double average = 8;
 * @return {number}
 */
proto.jisaem.test.Test.prototype.getAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setAverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double st_dev = 9;
 * @return {number}
 */
proto.jisaem.test.Test.prototype.getStDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setStDev = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double high_score = 10;
 * @return {number}
 */
proto.jisaem.test.Test.prototype.getHighScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setHighScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double low_score = 11;
 * @return {number}
 */
proto.jisaem.test.Test.prototype.getLowScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setLowScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional jisaem.label.Label test_label = 12;
 * @return {?proto.jisaem.label.Label}
 */
proto.jisaem.test.Test.prototype.getTestLabel = function() {
  return /** @type{?proto.jisaem.label.Label} */ (
    jspb.Message.getWrapperField(this, label_label_message_pb.Label, 12));
};


/**
 * @param {?proto.jisaem.label.Label|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setTestLabel = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearTestLabel = function() {
  return this.setTestLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasTestLabel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ExposeRankType expose_rank_type = 13;
 * @return {!proto.jisaem.test.ExposeRankType}
 */
proto.jisaem.test.Test.prototype.getExposeRankType = function() {
  return /** @type {!proto.jisaem.test.ExposeRankType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.jisaem.test.ExposeRankType} value
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.setExposeRankType = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp start_at = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getStartAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setStartAt = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearStartAt = function() {
  return this.setStartAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasStartAt = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Timestamp end_at = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getEndAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setEndAt = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearEndAt = function() {
  return this.setEndAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasEndAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp closed_at = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getClosedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setClosedAt = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearClosedAt = function() {
  return this.setClosedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasClosedAt = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp public_exposed_at = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jisaem.test.Test.prototype.getPublicExposedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setPublicExposedAt = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearPublicExposedAt = function() {
  return this.setPublicExposedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.Test.prototype.hasPublicExposedAt = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated TestScore scores = 18;
 * @return {!Array<!proto.jisaem.test.TestScore>}
 */
proto.jisaem.test.Test.prototype.getScoresList = function() {
  return /** @type{!Array<!proto.jisaem.test.TestScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jisaem.test.TestScore, 18));
};


/**
 * @param {!Array<!proto.jisaem.test.TestScore>} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setScoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.jisaem.test.TestScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jisaem.test.TestScore}
 */
proto.jisaem.test.Test.prototype.addScores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.jisaem.test.TestScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearScoresList = function() {
  return this.setScoresList([]);
};


/**
 * repeated TestExpectedGrade expected_grades = 19;
 * @return {!Array<!proto.jisaem.test.TestExpectedGrade>}
 */
proto.jisaem.test.Test.prototype.getExpectedGradesList = function() {
  return /** @type{!Array<!proto.jisaem.test.TestExpectedGrade>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jisaem.test.TestExpectedGrade, 19));
};


/**
 * @param {!Array<!proto.jisaem.test.TestExpectedGrade>} value
 * @return {!proto.jisaem.test.Test} returns this
*/
proto.jisaem.test.Test.prototype.setExpectedGradesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.jisaem.test.TestExpectedGrade=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jisaem.test.TestExpectedGrade}
 */
proto.jisaem.test.Test.prototype.addExpectedGrades = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.jisaem.test.TestExpectedGrade, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jisaem.test.Test} returns this
 */
proto.jisaem.test.Test.prototype.clearExpectedGradesList = function() {
  return this.setExpectedGradesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jisaem.test.TestScore.prototype.toObject = function(opt_includeInstance) {
  return proto.jisaem.test.TestScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jisaem.test.TestScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.TestScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    student: (f = msg.getStudent()) && class_class_message_pb.ClassParticipant.toObject(includeInstance, f),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    standardScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    percentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    participated: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jisaem.test.TestScore}
 */
proto.jisaem.test.TestScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jisaem.test.TestScore;
  return proto.jisaem.test.TestScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jisaem.test.TestScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jisaem.test.TestScore}
 */
proto.jisaem.test.TestScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new class_class_message_pb.ClassParticipant;
      reader.readMessage(value,class_class_message_pb.ClassParticipant.deserializeBinaryFromReader);
      msg.setStudent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStandardScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentage(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setParticipated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jisaem.test.TestScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jisaem.test.TestScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jisaem.test.TestScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.TestScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      class_class_message_pb.ClassParticipant.serializeBinaryToWriter
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getStandardScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getParticipated();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional jisaem.class.ClassParticipant student = 1;
 * @return {?proto.jisaem.class.ClassParticipant}
 */
proto.jisaem.test.TestScore.prototype.getStudent = function() {
  return /** @type{?proto.jisaem.class.ClassParticipant} */ (
    jspb.Message.getWrapperField(this, class_class_message_pb.ClassParticipant, 1));
};


/**
 * @param {?proto.jisaem.class.ClassParticipant|undefined} value
 * @return {!proto.jisaem.test.TestScore} returns this
*/
proto.jisaem.test.TestScore.prototype.setStudent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.clearStudent = function() {
  return this.setStudent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.TestScore.prototype.hasStudent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 rank = 2;
 * @return {number}
 */
proto.jisaem.test.TestScore.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double score = 3;
 * @return {number}
 */
proto.jisaem.test.TestScore.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double standard_score = 4;
 * @return {number}
 */
proto.jisaem.test.TestScore.prototype.getStandardScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.setStandardScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double percentage = 5;
 * @return {number}
 */
proto.jisaem.test.TestScore.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.setPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool participated = 6;
 * @return {boolean}
 */
proto.jisaem.test.TestScore.prototype.getParticipated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jisaem.test.TestScore} returns this
 */
proto.jisaem.test.TestScore.prototype.setParticipated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jisaem.test.OverallTestScore.prototype.toObject = function(opt_includeInstance) {
  return proto.jisaem.test.OverallTestScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jisaem.test.OverallTestScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.OverallTestScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    test: (f = msg.getTest()) && proto.jisaem.test.Test.toObject(includeInstance, f),
    student: (f = msg.getStudent()) && class_class_message_pb.ClassParticipant.toObject(includeInstance, f),
    overallRank: jspb.Message.getFieldWithDefault(msg, 3, 0),
    overallAverageScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    overallAverageStandardScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    overallPercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jisaem.test.OverallTestScore}
 */
proto.jisaem.test.OverallTestScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jisaem.test.OverallTestScore;
  return proto.jisaem.test.OverallTestScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jisaem.test.OverallTestScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jisaem.test.OverallTestScore}
 */
proto.jisaem.test.OverallTestScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.jisaem.test.Test;
      reader.readMessage(value,proto.jisaem.test.Test.deserializeBinaryFromReader);
      msg.setTest(value);
      break;
    case 2:
      var value = new class_class_message_pb.ClassParticipant;
      reader.readMessage(value,class_class_message_pb.ClassParticipant.deserializeBinaryFromReader);
      msg.setStudent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOverallRank(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverallAverageScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverallAverageStandardScore(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverallPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jisaem.test.OverallTestScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jisaem.test.OverallTestScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jisaem.test.OverallTestScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.OverallTestScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.jisaem.test.Test.serializeBinaryToWriter
    );
  }
  f = message.getStudent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      class_class_message_pb.ClassParticipant.serializeBinaryToWriter
    );
  }
  f = message.getOverallRank();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOverallAverageScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getOverallAverageStandardScore();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getOverallPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional Test test = 1;
 * @return {?proto.jisaem.test.Test}
 */
proto.jisaem.test.OverallTestScore.prototype.getTest = function() {
  return /** @type{?proto.jisaem.test.Test} */ (
    jspb.Message.getWrapperField(this, proto.jisaem.test.Test, 1));
};


/**
 * @param {?proto.jisaem.test.Test|undefined} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
*/
proto.jisaem.test.OverallTestScore.prototype.setTest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.clearTest = function() {
  return this.setTest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.OverallTestScore.prototype.hasTest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional jisaem.class.ClassParticipant student = 2;
 * @return {?proto.jisaem.class.ClassParticipant}
 */
proto.jisaem.test.OverallTestScore.prototype.getStudent = function() {
  return /** @type{?proto.jisaem.class.ClassParticipant} */ (
    jspb.Message.getWrapperField(this, class_class_message_pb.ClassParticipant, 2));
};


/**
 * @param {?proto.jisaem.class.ClassParticipant|undefined} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
*/
proto.jisaem.test.OverallTestScore.prototype.setStudent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.clearStudent = function() {
  return this.setStudent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jisaem.test.OverallTestScore.prototype.hasStudent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 overall_rank = 3;
 * @return {number}
 */
proto.jisaem.test.OverallTestScore.prototype.getOverallRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.setOverallRank = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double overall_average_score = 4;
 * @return {number}
 */
proto.jisaem.test.OverallTestScore.prototype.getOverallAverageScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.setOverallAverageScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double overall_average_standard_score = 5;
 * @return {number}
 */
proto.jisaem.test.OverallTestScore.prototype.getOverallAverageStandardScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.setOverallAverageStandardScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double overall_percentage = 6;
 * @return {number}
 */
proto.jisaem.test.OverallTestScore.prototype.getOverallPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.OverallTestScore} returns this
 */
proto.jisaem.test.OverallTestScore.prototype.setOverallPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jisaem.test.TestExpectedGrade.prototype.toObject = function(opt_includeInstance) {
  return proto.jisaem.test.TestExpectedGrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jisaem.test.TestExpectedGrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.TestExpectedGrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    standardScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    grade: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jisaem.test.TestExpectedGrade}
 */
proto.jisaem.test.TestExpectedGrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jisaem.test.TestExpectedGrade;
  return proto.jisaem.test.TestExpectedGrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jisaem.test.TestExpectedGrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jisaem.test.TestExpectedGrade}
 */
proto.jisaem.test.TestExpectedGrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStandardScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jisaem.test.TestExpectedGrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jisaem.test.TestExpectedGrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jisaem.test.TestExpectedGrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jisaem.test.TestExpectedGrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStandardScore();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getGrade();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional double standard_score = 1;
 * @return {number}
 */
proto.jisaem.test.TestExpectedGrade.prototype.getStandardScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestExpectedGrade} returns this
 */
proto.jisaem.test.TestExpectedGrade.prototype.setStandardScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int64 grade = 2;
 * @return {number}
 */
proto.jisaem.test.TestExpectedGrade.prototype.getGrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.jisaem.test.TestExpectedGrade} returns this
 */
proto.jisaem.test.TestExpectedGrade.prototype.setGrade = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.jisaem.test.ExposeRankType = {
  EXPOSE_RANK_TYPE_UNSPECIFIED: 0,
  EXPOSE_RANK_TYPE_ONLY_SELF: 1,
  EXPOSE_RANK_TYPE_FIRST: 2,
  EXPOSE_RANK_TYPE_SECOND: 3,
  EXPOSE_RANK_TYPE_THIRD: 4,
  EXPOSE_RANK_TYPE_ALL: 5
};

goog.object.extend(exports, proto.jisaem.test);
